{"version":3,"file":"static/js/279.76416067.chunk.js","mappings":"2KAEaA,E,QAAMC,GAAAA,OAAa,CAC9BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,qC,uKCFAC,EAAY,mCAAG,WAAMC,GAAN,gGAEDN,EAAAA,EAAAA,IAAA,iBAAkBM,IAFjB,cAElBC,EAFkB,yBAGjBA,EAASC,MAHQ,gCAKxBC,IAAAA,OAAAA,QAAwB,KAAMC,SALN,yDAAH,sD,6BCAZC,EAAmBC,EAAAA,GAAAA,IAAH,mJAUhBC,EAAYD,EAAAA,GAAAA,IAAH,8CAITE,EAAiBF,EAAAA,GAAAA,IAAH,sIASdG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,gN,SCgDvB,EA9DqB,WAAO,IAAD,IACzB,GAAkCK,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA4BJ,EAAAA,EAAAA,UAC1B,gNADF,eAAOK,EAAP,KAAeC,EAAf,KAGA,GAAkCN,EAAAA,EAAAA,UAAS,KAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAiB7C,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEwB3B,EAAaqB,GAFrC,OAEUO,EAFV,OAGId,EAAac,GACbZ,EAAeY,EAAMC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,OAC1Df,EAAU,kCAAD,OAAmCU,EAAMM,cAClDd,EAAa,GAAD,QAA0B,GAArBQ,EAAMO,cAAmBC,QAAQ,GAAtC,MANhB,kDAQIhC,IAAAA,OAAAA,QAAA,MARJ,2DADc,uBAAC,WAAD,wBAYdiC,EACD,GAAE,CAAChB,KAGF,6BACE,SAACX,EAAD,CAAY4B,GAAIf,EAAhB,sBACA,UAACjB,EAAD,YACE,gBAAKiC,IAAKtB,EAAQuB,IAAI,UACtB,UAAChC,EAAD,YACE,wBAAKK,EAAU4B,SACf,2CAAmBtB,MACnB,sCACA,uBAAIN,EAAU6B,YACd,mCACC3B,IAAe,uBAAIA,WAGxB,UAACN,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAM6B,GAAG,OAAOb,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMe,GAAG,SAASb,MAAO,CAAEC,KAAMH,GAAjC,6BAMN,SAAC,EAAAoB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/api.js","api/getMovieById.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '7d3bca08f8a690c3623c76013972de57',\n  },\n});\n","import Notiflix from 'notiflix';\nimport { api } from './api';\n\nexport const getMovieById = async id => {\n  try {\n    const response = await api.get(`/movie/${id}`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieInformation = styled.div`\n  margin-left: 15px;\n  display: flex;\n  border-bottom: 2px solid rgba(0, 0, 0, 0.2);\n\n  img {\n    width: 200px;\n  }\n`;\n\nexport const MovieCard = styled.div`\n  padding: 5px 15px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  margin: 10px 15px;\n  border-bottom: 2px solid rgba(0, 0, 0, 0.2);\n\n  li {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const BackButton = styled(Link)`\n  display: inline-block;\n  padding: 2px;\n  margin-left: 15px;\n  margin-bottom: 5px;\n  text-decoration: none;\n  font-size: 14px;\n  border: 1px solid grey;\n  border-radius: 3px;\n`;\n","import Notiflix from 'notiflix';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieById } from 'api/getMovieById';\nimport { Link, Outlet } from 'react-router-dom';\nimport {\n  MovieInformation,\n  MovieCard,\n  AdditionalInfo,\n  BackButton,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState([]);\n  const [movieGenres, setMovieGenres] = useState('');\n  const [poster, setPoster] = useState(\n    'https://media.istockphoto.com/vectors/cat-sits-in-a-box-with-a-404-sign-page-or-file-not-found-connection-vector-id1278808623?k=20&m=1278808623&s=612x612&w=0&h=tmzYgVK5yF-dtVvW81zz-Ebpeqd6EvD38KYGRjczuiw='\n  );\n  const [userScore, setUserScore] = useState('0');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function getMovieInfo() {\n      try {\n        const movie = await getMovieById(movieId);\n        setMovieInfo(movie);\n        setMovieGenres(movie.genres.map(genre => genre.name).join(', '));\n        setPoster(`https://image.tmdb.org/t/p/w500${movie.poster_path}`);\n        setUserScore(`${(movie.vote_average * 10).toFixed(0)}%`);\n      } catch (error) {\n        Notiflix.Notify.failure(error);\n      }\n    }\n    getMovieInfo();\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackButton to={backLinkHref}>Go back</BackButton>\n      <MovieInformation>\n        <img src={poster} alt=\"King\" />\n        <MovieCard>\n          <h2>{movieInfo.title}</h2>\n          <span>User score: {userScore}</span>\n          <h3>Overview</h3>\n          <p>{movieInfo.overview}</p>\n          <h3>Genres</h3>\n          {movieGenres && <p>{movieGenres}</p>}\n        </MovieCard>\n      </MovieInformation>\n      <AdditionalInfo>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"review\" state={{ from: backLinkHref }}>\n              Review\n            </Link>\n          </li>\n        </ul>\n      </AdditionalInfo>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["api","axios","baseURL","params","api_key","getMovieById","id","response","data","Notiflix","message","MovieInformation","styled","MovieCard","AdditionalInfo","BackButton","Link","useState","movieInfo","setMovieInfo","movieGenres","setMovieGenres","poster","setPoster","userScore","setUserScore","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","movie","genres","map","genre","name","join","poster_path","vote_average","toFixed","getMovieInfo","to","src","alt","title","overview","Suspense","fallback"],"sourceRoot":""}