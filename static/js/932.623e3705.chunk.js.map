{"version":3,"file":"static/js/932.623e3705.chunk.js","mappings":"2KAEaA,E,QAAMC,GAAAA,OAAa,CAC9BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,qC,6ICFAC,EAAe,mCAAG,WAAMC,GAAN,gGAEJN,EAAAA,EAAAA,IAAA,iBAAkBM,EAAlB,aAFI,cAErBC,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BC,IAAAA,OAAAA,QAAwB,KAAMC,SALH,yDAAH,sD,6BCDfC,E,QAAgBC,GAAAA,GAAH,uL,SCgC1B,EA5Ba,WACX,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OARAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA2BC,GAA3B,uFACyBd,EAAgBc,GADzC,OACQZ,EADR,OAGEQ,EAAYR,EAASa,MAHvB,4CADc,uBAAC,SAAD,2BAMdC,CAAYL,EACb,GAAE,CAACA,KAEF,SAACL,EAAD,UACGG,EAASQ,KAAI,SAAAF,GAAI,OAChB,2BACE,gBACEG,IAAG,yCAAoCH,EAAKI,cAC5CC,IAAKL,EAAKM,QAEZ,wBAAKN,EAAKM,OALZ,cAMcN,EAAKO,YANVP,EAAKd,GADE,KAYvB,C","sources":["api/api.js","api/getMovieCredits.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '7d3bca08f8a690c3623c76013972de57',\n  },\n});\n","import Notiflix from 'notiflix';\nimport { api } from './api';\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await api.get(`/movie/${id}/credits`);\n    return response.data;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n};\n","import styled from 'styled-components';\n\nexport const CastComponent = styled.ul`\n  li {\n    margin-bottom: 10px;\n  }\n  img {\n    width: 80px;\n    margin-bottom: 10px;\n  }\n  h4 {\n    margin-bottom: 10px;\n    margin-top: 10px;\n  }\n`;\n","import { getMovieCredits } from 'api/getMovieCredits';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastComponent } from './Cast.styled';\n\nconst Cast = () => {\n  const [castInfo, setCastInfo] = useState([]);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function getCastInfo(prop) {\n      const response = await getMovieCredits(prop);\n\n      setCastInfo(response.cast);\n    }\n    getCastInfo(movieId);\n  }, [movieId]);\n  return (\n    <CastComponent>\n      {castInfo.map(cast => (\n        <li key={cast.id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\n            alt={cast.name}\n          />\n          <h4>{cast.name}</h4>\n          Character: {cast.character}\n        </li>\n      ))}\n    </CastComponent>\n  );\n};\n\nexport default Cast;\n"],"names":["api","axios","baseURL","params","api_key","getMovieCredits","id","response","data","Notiflix","message","CastComponent","styled","useState","castInfo","setCastInfo","movieId","useParams","useEffect","prop","cast","getCastInfo","map","src","profile_path","alt","name","character"],"sourceRoot":""}